/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.37
 * Generated at: 2024-05-11 00:10:32 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.Compra;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class Visu_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"pt-BR\">\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"../Css/Compra/Carrinho.css\">\r\n");
      out.write("    <link rel=\"shortcut icon\" href=\"images/favicon.png\" type=\"image/png\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css\">\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    <title>Compras passadas</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<header class=\"main-header\">\r\n");
      out.write("    <nav class=\"main-nav container\">\r\n");
      out.write("        <ul class=\"header-list-container list-container\">\r\n");
      out.write("            <li class=\"nav-item\">\r\n");
      out.write("                <a href=\"/achar-todos-produtos-cliente\">Home</a>\r\n");
      out.write("            </li>\r\n");
      out.write("        </ul>\r\n");
      out.write("    </nav>\r\n");
      out.write("    <hr>\r\n");
      out.write("    <!-- Adicionar imagem de fundo no CSS -->\r\n");
      out.write("</header>\r\n");
      out.write("\r\n");
      out.write("<main class=\"main-section\">\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("            <input id=\"tela\" name=\"tela\" type=\"hidden\" value=\"Carrinho\">Carrinho</input>\r\n");
      out.write("            <table class=\"cart-table\">\r\n");
      out.write("                <tr>\r\n");
      out.write("                    <th class=\"table-head-item first-col\">Venda</th>\r\n");
      out.write("                    <th class=\"table-head-item first-col\">Produto</th>\r\n");
      out.write("                    <th class=\"table-head-item second-col\">Endereço de entrega</th>\r\n");
      out.write("                    <th class=\"table-head-item third-col\">Valor total</th>\r\n");
      out.write("                </tr>\r\n");
      out.write("\r\n");
      out.write("                    <tr>\r\n");
      out.write("                        <td>1</td>\r\n");
      out.write("                        <td>Action Figure DarthVader(2), Funko pop DarthVader</td>\r\n");
      out.write("                        <td>PR Osasco Rochdale Avenida Cruzeiro 3777 ap2091</td>\r\n");
      out.write("                        <td>R$10.310,00</td>\r\n");
      out.write("                    </tr>\r\n");
      out.write("                </tbody>\r\n");
      out.write("\r\n");
      out.write("            </table>\r\n");
      out.write("\r\n");
      out.write("            <a id=\"enderecoA\" href=\"/achar-todos-produtos-cliente\">\r\n");
      out.write("                <button type=\"button\" class=\"purchase-button\">Voltar</button>\r\n");
      out.write("            </a>\r\n");
      out.write("</main>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("\r\n");
      out.write("const addEndereco = () =>{\r\n");
      out.write("const enderecoFinal = document.getElementById(\"EnderecoFinal\").value\r\n");
      out.write("document.getElementById(\"enderecoA\").addAtribute(\"href\", enderecoFinal)\r\n");
      out.write("}\r\n");
      out.write("    function formatarCEP(input) {\r\n");
      out.write("      var cep = input.value;\r\n");
      out.write("\r\n");
      out.write("      // Remover todos os caracteres não numéricos\r\n");
      out.write("      cep = cep.replace(/\\D/g, '');\r\n");
      out.write("\r\n");
      out.write("      // Adicionar o caractere \"-\" após os primeiros 5 dígitos\r\n");
      out.write("      cep = cep.replace(/^(\\d{5})(\\d)/, '$1-$2');\r\n");
      out.write("\r\n");
      out.write("      // Atualizar o valor do campo de entrada\r\n");
      out.write("      input.value = cep;\r\n");
      out.write("    }\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("        // Função para formatar o valor\r\n");
      out.write("        function formatarValor(valor) {\r\n");
      out.write("            return valor.toLocaleString('pt-BR', { style: 'currency', currency: 'BRL' });\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        // Função para calcular o valor total\r\n");
      out.write("        function calcularTotal(valorProduto, valorFrete) {\r\n");
      out.write("            return valorProduto + valorFrete;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        // Seleciona o elemento span pelo id\r\n");
      out.write("        var elementoTotal = document.getElementById('totalGeral');\r\n");
      out.write("\r\n");
      out.write("        // Define uma variável para armazenar o valor do produto (você pode ajustar isso conforme necessário)\r\n");
      out.write("        var valorProduto = 10300;\r\n");
      out.write("\r\n");
      out.write("        // Adiciona um evento de clique a todos os botões de rádio\r\n");
      out.write("        var botoesRadio = document.querySelectorAll('input[name=\"frete\"]');\r\n");
      out.write("        botoesRadio.forEach(function(botao) {\r\n");
      out.write("            botao.addEventListener('click', function() {\r\n");
      out.write("                // Obtém o valor do frete do botão de rádio selecionado\r\n");
      out.write("                var valorFrete = parseInt(this.value);\r\n");
      out.write("\r\n");
      out.write("                // Calcula o novo valor total\r\n");
      out.write("                var novoTotal = calcularTotal(valorProduto, valorFrete);\r\n");
      out.write("\r\n");
      out.write("                // Atualiza o conteúdo do elemento span com o novo valor total formatado\r\n");
      out.write("                elementoTotal.textContent = formatarValor(novoTotal);\r\n");
      out.write("            });\r\n");
      out.write("        });\r\n");
      out.write("    </script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
